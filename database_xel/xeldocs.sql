-- phpMyAdmin SQL Dump
-- version 5.1.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Waktu pembuatan: 24 Agu 2023 pada 18.22
-- Versi server: 10.4.22-MariaDB
-- Versi PHP: 8.1.2

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `xeldocs`
--

-- --------------------------------------------------------

--
-- Struktur dari tabel `categories`
--

CREATE TABLE `categories` (
  `category_id` int(20) NOT NULL,
  `name` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `categories`
--

INSERT INTO `categories` (`category_id`, `name`) VALUES
(1, 'Routing'),
(2, 'Databases'),
(3, 'Instalation'),
(4, 'File Storage'),
(5, 'Utility Class'),
(6, 'PHPUnit Test Integration'),
(7, 'Security'),
(9, 'Welcome'),
(13, 'Xel Dependency Collection'),
(14, 'BSD');

-- --------------------------------------------------------

--
-- Struktur dari tabel `documentation`
--

CREATE TABLE `documentation` (
  `id` int(20) NOT NULL,
  `title` varchar(255) NOT NULL,
  `content` text NOT NULL,
  `category_id` int(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `documentation`
--

INSERT INTO `documentation` (`id`, `title`, `content`, `category_id`) VALUES
(9, 'Setup Database', '<p><strong>Setup Database Connections</strong></p>\r\n<p>Buka file&nbsp;.env&nbsp;di dalam folder root XEL, kemudian isikan data&nbsp;DBHOST, DBUSER, dan DBPASSWORD&nbsp;yang sesuai dengan konfigurasi database yang dibuat.</p>\r\n<ul>\r\n<li>Implementasi Setup .ENV file. DB_HOST berisi alamat dari serve dbms yang di tuju, secara default alamat DB_HOST adalaha localhost, DB_PORT merupakan akses masuk ke sistem DBMS mysql , DB_DATABASE merupakan merupakan database yang ingin di sambungkan, dan DB_USER dan DB_PASSWORD merupakan data yang digunakan untuk masuk kesistem / login sehingga manipulasi database akan ter otorisasi.</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\">DB_HOST<span style=\"color: #339933;\">=</span>localhost<br />DB_PORT<span style=\"color: #339933;\">=</span><span style=\"color: #cc66cc;\">3306</span><br />DB_DATABASE<span style=\"color: #339933;\">=</span>xeldocs<br />DB_USERNAME<span style=\"color: #339933;\">=</span>root<br />DB_PASSWORD<span style=\"color: #339933;\">=</span><br />&nbsp;</pre>', 2),
(10, 'Future DBMS', '<p>Pada prototipe awal DBMS yang didukung adalah mysql karena kemudahan integrasi dengan paket lain, dan merupakan pilihah popular utama yang sering digunakan. Pada pengembangan berikutnya, aka nada beberapa integrasi dbms relational maupun non relational seperti mongo db, sqllite, postgree.</p>', 2),
(11, 'Xgen Query Builder', '<p>Merupakan simple autoquery build in yang digunakan untuk mempermudah pengguna untuk melakukan proses query sederhana yang melibatkan proses seperti INSERT, SELECT, UPDATE, DELETE&nbsp;&nbsp; menggunakan database SQL. Penerapan&nbsp; beberapa proses query sebagai berikut</p>\r\n<ul>\r\n<li>Show</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @param string $table<br />&nbsp;* @return mixed<br />&nbsp;* used for select all data in specific table<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> show<span style=\"color: #009900;\">(</span>string <span style=\"color: #000088;\">$table</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> mixed<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> &nbsp;<span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">selectAll</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$table</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// TODO: Implement show() method.</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>ShowById</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @param string $table<br />&nbsp;* @param int $id<br />&nbsp;* @return mixed<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> showById<span style=\"color: #009900;\">(</span>string <span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> int <span style=\"color: #000088;\">$id</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> mixed<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">selectById</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$id</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// TODO: Implement showById() method.</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Renew</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @param array $data<br />&nbsp;* @param string $table<br />&nbsp;* @param int $recordId<br />&nbsp;* @return mixed<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> renew<span style=\"color: #009900;\">(</span>string <span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> <span style=\"color: #990000;\">array</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">,</span> int <span style=\"color: #000088;\">$recordId</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> mixed<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">update</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span><span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">,</span><span style=\"color: #000088;\">$recordId</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// TODO: Implement renew() method.</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Destroy</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @param string $table<br />&nbsp;* @param int $id<br />&nbsp;* @return mixed<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> destroy<span style=\"color: #009900;\">(</span>string <span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> int <span style=\"color: #000088;\">$id</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> mixed<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">delete</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span><span style=\"color: #000088;\">$id</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// TODO: Implement destroy() method.</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Insert</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @param array $data<br />&nbsp;* @param string $table<br />&nbsp;* @return mixed<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> insert<span style=\"color: #009900;\">(</span>string <span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> <span style=\"color: #990000;\">array</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> mixed<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">insertdata</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$table</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// TODO: Implement insert() method.</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<p><strong>Statement usage on xgen on Service segmen or Basedata Segmen</strong></p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #666666; font-style: italic;\">//for show request</span><br />&nbsp;<span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">show</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'table_name\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<span style=\"color: #666666; font-style: italic;\">//show data by id</span><br /><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">showById</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'table_name\'</span><span style=\"color: #339933;\">,</span> &nbsp;<span style=\"color: #0000ff;\">\'fill with id on number\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #666666; font-style: italic;\">//renew $data</span><br /><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">renew</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'table_name\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'[ fill with data array as array assosiative]\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #666666; font-style: italic;\">//destroy data</span><br /><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">destroy</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'table_name\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'[ fill with id data number]\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #666666; font-style: italic;\">//insert data</span><br /><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">insert</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'table_name\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'[ fill with data array as array assosiative]\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;</pre>', 2),
(21, 'Helper', '<p>Merupakan file yang berisi Kumpulan fungsi yang dapat digunakan oleh user pada client side untuk dengan mudah menghubungkan file file di direktory display dengan service di bagian server.</p>\r\n<ul>\r\n<li>Asset loader merupakan fungsi yang digunakan untuk mendukung injeksi skrip css , javascript, image dalam bentuk file ke dalam file di segmen display. Karena file css, image, js terletak pada folder public dan terjadi invokasi url dari router sehingga di parameter url tidak akan bisa langsung mengakses file css, image, maupun javascript sehingga perlu fungsi loader dari server yang digunakan untuk menambahkan file tersebut . Kemudian ,Untuk cara penggunaannya sebagai berikut:</li>\r\n</ul>\r\n<pre class=\"html4strict bg-light border border-primary rounded\" style=\"font-family: monospace;\">o //untuk file css<br />o <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">link</span> <span style=\"color: #000066;\">rel</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"stylesheet\"</span> <span style=\"color: #000066;\">href</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"<!--?= asset(\'/css/main.css\');?--></span></span>\" /&gt;<br />&nbsp;<br />//untuk image&nbsp;<br />o <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">link</span> <span style=\"color: #000066;\">rel</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"icon\"</span> <span style=\"color: #000066;\">href</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"<!--?=asset(\'/tempSTR/favicon.png\');?--></span></span>\" type=\"image/x-icon\" /&gt;<br />&nbsp;</pre>\r\n<ul>\r\n<li>Action form handler(route_post()) digunakan untuk mendukung Gemstone Process untuk melakukan storing csrf token, dan mentrasnmisikan data ke Gemstone Process sebelum data yang sudah aman di teruskan ke service tujuan . cara penggunaannya sebagai berikut :</li>\r\n</ul>\r\n<pre class=\"html4strict bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">form</span> <span style=\"color: #000066;\">action</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"&lt;?= route_post(\'GemstonePatch.test1\', \'Diamond\');?&gt;</span></span>\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>', 5),
(23, 'App Server', '<ol>\r\n<li>Install di App server {Laragon / Xampp / Mamp}\r\n<ul>\r\n<li>Download zip file Xel-Framework</li>\r\n<li>Ekstak file zip xel framework</li>\r\n<li>Letakkan file yang sudah di ekstrak ke dalam folder www/htdocs seuai dengan app yang digunakan</li>\r\n<li>Jalankan apache web server</li>\r\n<li>Akses localhost/xel/</li>\r\n<li>Cara alternatif bisa menggunakan PHP &ndash;S localhost:8080 -t public pada command line, dan jalankan <a href=\"https://localhost:8080/\">https://localhost:8080/</a> untuk mengakses halaman welcome xel framework</li>\r\n</ul>\r\n</li>\r\n</ol>', 3),
(24, 'Apache Server', '<ol>\r\n<li>Install di apace2 server\r\n<ul>\r\n<li>Download zip file Xel-Framework</li>\r\n<li>Ekstak file zip xel framework</li>\r\n<li>Letakkan file yang sudah di ekstrak ke dalam folder /var/www/html</li>\r\n<li>Akses alamat localhos/xel/ untuk mengakses halaman pertama dari xel framework</li>\r\n<li>Cara alternatif bisa menggunakan PHP &ndash;S localhost:8080 -t public pada command line, dan jalankan <a href=\"https://localhost:8080/\">https://localhost:8080/</a> untuk mengakses halaman welcome xel framework</li>\r\n</ul>\r\n</li>\r\n</ol>', 3),
(25, 'Files Storage Processing (Available on 0.9 Alpa Version)', '<p>Files processing merupakan utilitas yang digunakan untuk memparsing data berupa files kategori bentuk gambar dan dokumen kedalam local storage dari direktori yang disediakan oleh framework xel.</p>', 4),
(28, 'Overview', '<p>Merupakan&nbsp; fitur yang digunakan untuk menginvoke url agar dapat dikustom dengan path yang lebih sederhana. Selain itu, pada router juga digunakan sebagai perutean suatu data yang akan di tujukan ke service pada function tertentu dan membuat instancenya sekaligus untuk menjalankan setiap function yang akan di panggil.</p>\r\n<p><strong>Router Web and Router Api</strong></p>\r\n<p><strong>Web Router</strong></p>\r\n<p>Merupakan sistematika router yang digunakan untuk melakukan mondifikasi parameter url, dan menajalankan file service yang didefinisikan di dalamnya . secara default router akan memiliki 1 url untuk menampilkan landing page untuk first app.</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\"><!--?php</span--><br /><span style=\"color: #b1b100;\">require_once</span> __DIR__<span style=\"color: #339933;\">.</span><span style=\"color: #0000ff;\">\'/../vendor/autoload.php\'</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #000000; font-weight: bold;\">use</span> setup\\config\\routerv1<span style=\"color: #339933;\">;</span><br /><span style=\"color: #000000; font-weight: bold;\">use</span> setup\\<span style=\"color: #990000;\">system</span>\\di\\dependencyinjector<span style=\"color: #339933;\">;</span><br /><span style=\"color: #000000; font-weight: bold;\">new</span> setup\\config\\bootstrap<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* Router web implementation for traditional synchronous data transmission with container based injector or constructor<br />&nbsp;*/</span><br />&nbsp;<br /><span style=\"color: #000088;\">$container</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000000; font-weight: bold;\">new</span> dependencyinjector<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #000088;\">$router</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000000; font-weight: bold;\">new</span> routerv1<span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$container</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* Setup Prefix for non Api Router<br />&nbsp;*/</span><br /><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">setPrefix</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\"web\"</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* Standard router prefix<br />&nbsp;*/</span><br />&nbsp;<br /><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">get</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'index\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #990000;\">exec</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;</span></pre>\r\n<p>Berdasarkan router tersebut tersebut menggunakan konsep OOP untuk menjalankan router web. Kemudian untuk</p>\r\n<ol>\r\n<li><strong>Dependency Injector</strong> digunakan untuk melakukan instansiasi pada object class yang didefinisikan di constructor class untuk mendukung suatu kelas lain yang akan digunakan untuk melakukan diintegrasikan dan digunakan ulang jika dibutuhkan.</li>\r\n<li><strong>Router Prefix (Still on the concept development for router Group. It will available on version 0.9 alpa version) </strong>merupakan parameter url yang digunakan untuk mempertegas field dari url berada pada router api atau non api. Selain itu router prefix digunakan untuk melakukan router Grouping untuk mempermudah user dalam melakukan pengelolaan router berdasarkan studi kasus yang dibuat.</li>\r\n<li><strong>Param Usage </strong>Dalam mendefinisikan router perl di ketahui terkait parameter penyusun router yakni,\r\n<ul>\r\n<li><strong>Tipe fungsi router [Required]</strong></li>\r\n<li><strong>Paramter url [Required]</strong></li>\r\n<li><strong>Nama class yang dituju [Required]</strong></li>\r\n<li><strong>Fungsi yang di tuju [Required]</strong></li>\r\n<li><strong>Middleware [Optional]</strong></li>\r\n</ul>\r\n</li>\r\n<li><strong>Define router. </strong>Pada router sejatinya hanya mendukung POST dan GET Request dan perlu dilakukan managemen tambahan untuk dapat membuatnya berfungsi. Contoh Implementasi pendefinisian Router\r\n<ul>\r\n<li>Router GET [Digunakan untuk mengambil atau menampilkan data ke ]&nbsp;</li>\r\n</ul>\r\n</li>\r\n</ol>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">get</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'index\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>\r\n<ul>\r\n<li style=\"list-style-type: none;\">\r\n<ul>\r\n<li>Router POST [ Digunakan untuk untuk menangani perintah pengiriman data ke bagian service tujuan ]&nbsp;</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">post</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/post\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'post\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>\r\n<ul>\r\n<li style=\"list-style-type: none;\">\r\n<ul>\r\n<li>Router PUT [ Digunakan sebagai bentuk otoritas yang digunakan untuk melakukan update data dengan menggantikan data baru dengan data lama ].</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">put</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/put\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'put\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>\r\n<ul>\r\n<li style=\"list-style-type: none;\">\r\n<ul>\r\n<li>Router Delete [ Digunakan sebagai bentuk otoritas yang digunakan untuk melakukan penghapusan data pada Service proses service tertentu bai berhubungan dengan database atau bukan].</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">delete</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/delete\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'delete\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Api Router (Coming Soon for full Concpet in version 0.9 Alpa)</strong></p>', 1),
(29, 'Router with Gemstone Implementation (V1 Alpha Concept)', '<p>Implenetasi Router dengan Gemstone digunakan untuk mempersingkat kegunaan router dan mendukung sub proses tambahan untuk melakukan sanitasi dan isolasi data sebelum di teruskan ke service tujuan.</p>\r\n<ol>\r\n<li>Implementasi Router. Pada Gemstone Process semua Request Untuk POST, PUT, DELETE akan melalui 1 rute yang sama yakni GemstonePatch. Konsep dari Router Berbasis Gemstone menggunakan konsep <em>Stop and Go </em>yangmana setiap proses sanitasi dan validasi, serta proses sub lainnya dapat di tambahkan ke dalam Gemstone Process sehingga data yang diterima atau di kirim ke service tujuan sudah dapat siap pakai tanpa perlu dilakukan sanitasi dan langkan keamanan lain.</li>\r\n</ol>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* Part of Gemstone Processor for getting the data<br />&nbsp;*/</span><br />&nbsp;<br /><span style=\"color: #000088;\">$router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">post</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/GemstonePatch\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Gemstone\\datacatcher<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'index\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;</pre>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;2. Penggunaan Function helper pada form pada file display jika melakukan implementasi dengan Gemstone.</p>\r\n<pre class=\"html4strict bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">html</span>&gt;</span><br /><span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">form</span> <span style=\"color: #000066;\">action</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"<!--?= route_post(\'GemstonePatch.test1\', \'Diamond\');?--></span></span>\" method=\"post\" enctype=\"multipart/form-data\"&gt;<br />&nbsp; &nbsp;// Add Csrf Token on form submission (Must Added)<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;?<span style=\"color: #66cc66;\">=</span> getcsrf<span style=\"color: #66cc66;\">(</span><span style=\"color: #66cc66;\">)</span> ;?&gt;</span><br />&nbsp;<br />&nbsp; &nbsp; // Add Type Hinting Request method (Helper Router Function)<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;?<span style=\"color: #66cc66;\">=</span> <span style=\"color: #000066;\">method</span><span style=\"color: #66cc66;\">(</span><span style=\"color: #ff0000;\">\'PUT\'</span><span style=\"color: #66cc66;\">)</span>;?&gt;</span><br />&nbsp;<br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">label</span> <span style=\"color: #000066;\">for</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"fname\"</span>&gt;</span>First name:<span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">label</span>&gt;&lt;<span style=\"color: #000000; font-weight: bold;\">br</span>&gt;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">input</span> <span style=\"color: #000066;\">type</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"text\"</span> <span style=\"color: #000066;\">id</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"fname\"</span> <span style=\"color: #000066;\">name</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"fname\"</span>&gt;&lt;<span style=\"color: #000000; font-weight: bold;\">br</span>&gt;</span><br />&nbsp;<br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">label</span> <span style=\"color: #000066;\">for</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"lname\"</span>&gt;</span>Last name:<span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">label</span>&gt;&lt;<span style=\"color: #000000; font-weight: bold;\">br</span>&gt;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">input</span> <span style=\"color: #000066;\">type</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"text\"</span> <span style=\"color: #000066;\">id</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"lname\"</span> <span style=\"color: #000066;\">name</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"lname\"</span>&gt;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">label</span> <span style=\"color: #000066;\">for</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"lname\"</span>&gt;</span>Files:<span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">label</span>&gt;&lt;<span style=\"color: #000000; font-weight: bold;\">br</span>&gt;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">input</span> <span style=\"color: #000066;\">type</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"file\"</span> <span style=\"color: #000066;\">id</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"lname\"</span> <span style=\"color: #000066;\">name</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"document\"</span>&gt;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">&lt;<span style=\"color: #000000; font-weight: bold;\">button</span> <span style=\"color: #000066;\">type</span><span style=\"color: #66cc66;\">=</span><span style=\"color: #ff0000;\">\"submit\"</span>&gt;</span>Submit<span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">button</span>&gt;</span><br /><span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">form</span>&gt;</span><br /><span style=\"color: #009900;\">&lt;<span style=\"color: #66cc66;\">/</span><span style=\"color: #000000; font-weight: bold;\">html</span>&gt;</span><br />&nbsp;</pre>', 1),
(30, 'Gemstone Request Handler (XSS protection Build-in)', '<p>Merupakan sub proses yang digunakan untuk melakukan handling post, put, delete request non api(masih dalam bentuk prototipe dasar) yang tujuannya adalah menangkap semua request data dari post request kemudian data tersebut akan mengalami sanitasi dan enkripsi dan akhirnya akan di kirimkan ke service tujuan untuk di process. Dalam menangani xss attack, untuk mensanitasi data digunakan fitur fitur build-in dari php seperti htmlentities dan html special charater untuk menghindari passing data berupa script tag dan memperlakukan data tersebut seperti string biasa sehingga script tidak akan bisa di eksekusi. Selain itu data akan di enkripsi menggunakan algoritma gemstone yang melibatkan 3 lapis keamaan , yakni membuat token gemstone yang akan di konversi menjadi hashing dengan sha256 -cbc, kemudian di enkripsi menggunakan openssl dan terakhir agar bisa digunakan sebagai token, maka di konversi dalam format hexadecimal.</p>\r\n<p><strong>Struktur Gemstone Handler</strong></p>\r\n<p>Index Function sebagai core progam yang awalnya akan dilakukan pengecekan csrf token sebagai mitigasi dasar dalam mencegah serangan&nbsp; CSRF yang dilakukan oleh pengguna dari website lain menggunakan request eksternal yang ditujukan ke website target.</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @throws \\Exception<br />&nbsp;* Index merupakan base function yang digunakan sebagai antarmuka dari proses validasi keamanaan csrf,&nbsp;<br />&nbsp;* sanitasi data, enkripsi, dan redirect data&nbsp;<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> index<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> void<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #990000;\">session_start</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp;<span style=\"color: #666666; font-style: italic;\">// CSRF Protections</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">if</span><span style=\"color: #009900;\">(</span><span style=\"color: #339933;\">!</span><span style=\"color: #990000;\">isset</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$_POST</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'csrf_token\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span> <span style=\"color: #339933;\">||</span> <span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'csrf\'</span><span style=\"color: #009900;\">]</span> <span style=\"color: #339933;\">!==</span>&nbsp;<br />&nbsp; <span style=\"color: #000088;\">$_POST</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'csrf_token\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span>&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">unset</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'csrf\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp; Display<span style=\"color: #339933;\">::</span><span style=\"color: #004000;\">render</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'error/expired\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span> <span style=\"color: #b1b100;\">else</span> <span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp; <span style=\"color: #666666; font-style: italic;\">// Sanitize data process </span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$_POST</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$data1</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">sazitize</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; <span style=\"color: #666666; font-style: italic;\">// Enkripsi data</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$encrypt</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">gem</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">ed</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\"param\"</span><span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$data1</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$wrapper</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #009900;\">[</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'gemstone\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$encrypt</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'salt\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\"param\"</span><span style=\"color: #009900;\">]</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; <span style=\"color: #666666; font-style: italic;\">// mendefinisikan url tujuan service </span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$url</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #0000ff;\">\'/\'</span> <span style=\"color: #339933;\">.</span> <span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\"url_patch\"</span><span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// Save session data and generate new session ID</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">session_regenerate_id</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900; font-weight: bold;\">true</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">session_write_close</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// Set more permissive Content Security Policy for </span><br />&nbsp; &nbsp; &nbsp; &nbsp; localhost development<br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">header</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\"Content-Security-Policy: default-src \'self\'&nbsp;<br />&nbsp; \'unsafe-inline\' \'unsafe-eval\';\"</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<br />&nbsp; <span style=\"color: #666666; font-style: italic;\">// melakukan redirect data ke service tujuan.</span><br />&nbsp; &nbsp; &nbsp; &nbsp; Display<span style=\"color: #339933;\">::</span><span style=\"color: #004000;\">redirectWithMessage</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$url</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'Data processed&nbsp;<br />&nbsp; successfully.\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$wrapper</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #990000;\">session_destroy</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /> &nbsp;</pre>', 7),
(31, 'Gemstone Mechanism (CSRF) Protection', '<p>Mekanisme tokenisasi adalah salah satu cara untuk mengamankan suatu sesi dan bisa juga juga memvalidasi otorisasai suatu data dan proses apakan valid atau tidak sebelum diolah oleh server. Salah satu mekanisme tokenisasi adalah CSRF Token yangmana berfungsi sebagai random proteksi token yang berfungsi untuk mengamankan suatu session dan cookie dari serangan Crosite forgery attack dan xss attack yang memanfaatkan session yang terekspose. Cara kerja dari CSRF adalah melakukan suatu refresh token setiapkali suatu proses sudah diselesaikan. Selain itu, untuk keperluan jangka panjang, token csrf ini juga bisa digunakan untuk proses autorisasi dan authentikasi pada beberapa proses seperti login dan transaksi. Pada Gemstone. Terdapat class yang mengatur generalisasi paket csrf yakni&nbsp; csrf_shielded class dengan struktur sebagai berikut,</p>\r\n<ul>\r\n<li>Create Token function berfungsi sebagai antarmuka kunci untuk melakukan generator token dan akan berubah ubah secara dinamis ketika page atau request di perbaharui.</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @return string|null<br />&nbsp;* @throws \\Exception<br />&nbsp;* Token Based Gemstone Generator<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> create_token<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$shuffledValues</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #990000;\">array_values</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">token</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #990000;\">shuffle</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$shuffledValues</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000088;\">$shuffledArray</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #990000;\">array_combine</span><span style=\"color: #009900;\">(</span><span style=\"color: #990000;\">array_keys</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">token</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$shuffledValues</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">generate</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$shuffledArray</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Penerapan enkapsulasi Generate Key secara private untuk menghasilkan token yang random.</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp;* @throws \\Exception<br />&nbsp;*/</span><br /><span style=\"color: #000000; font-weight: bold;\">private</span> <span style=\"color: #000000; font-weight: bold;\">function</span> generate<span style=\"color: #009900;\">(</span><span style=\"color: #990000;\">array</span> <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #009900;\">[</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// randomize the token key pair</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$randomKey</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #990000;\">array_rand</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$randomValue</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">[</span><span style=\"color: #000088;\">$randomKey</span><span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//random length to generate random string</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$randlength</span> <span style=\"color: #339933;\">=</span> random_int<span style=\"color: #009900;\">(</span><span style=\"color: #cc66cc;\">32</span><span style=\"color: #339933;\">,</span><span style=\"color: #cc66cc;\">128</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//random string</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$random_key</span> <span style=\"color: #009900;\">[</span><span style=\"color: #009900;\">]</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #990000;\">substr</span><span style=\"color: #009900;\">(</span><span style=\"color: #990000;\">bin2hex</span><span style=\"color: #009900;\">(</span>random_bytes<span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$randlength</span><span style=\"color: #009900;\">)</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">,</span> <span style=\"color: #cc66cc;\">0</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$randlength</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">main</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">ed</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$randomValue</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$random_key</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>', 7),
(34, 'PHPUnit Test Integration', '<p>Digunakan sebagai tujuan pengembangan fungsi pada progam yang dibuat. Dengan meggunakan phpunit, suatu programmer dapat melakukan customisasi dan perbaikan terhadap kode yang dibuat sebelumnya sehingga progam yang dikembangkan dapat memiliki strukutur kode yang lebih rapi, memiliki kecepatan query dan render yang relative cepat, serta kode dapat digunakan kembali pada suatu spesifik progam pada pengembangan di masa depan.</p>', 6),
(36, 'Alpha 0.5', '<p>Light weight framework with new design pattern for developed first secure web without enabling more dependency.</p>\r\n<ul>\r\n<li>Welcome to xel</li>\r\n<li>Server Requirement</li>\r\n<li>Quick start</li>\r\n<li>Credits</li>\r\n</ul>', 9);
INSERT INTO `documentation` (`id`, `title`, `content`, `category_id`) VALUES
(40, 'Middleware', '<p>Middleware merupakan salah satu sub proses yang digunakan sebagai stop point untuk memvalidasi, mengotorisasi, dan mensanitasi data sebelum diteruskan ke service tujuan. Pada konsep middleware ini mengimplementasikan interface untuk mempermudah suatu class yang mengimplementasikan interface middleware untuk selalu mengoveride suatu fungsi standartnya secara otomatis.</p>\r\n<p>Penggunaan Middleware yang digunakan untuk untuk proses autentikasi dan Otorisasi user&nbsp; (Coming soon for Multiple Role User check) dengan Gemstone Auth class</p>\r\n<ul>\r\n<li>Melakukan validasi user email dan password user</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> do_login<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> void<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//getting data</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">handler</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">request</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// handling validator email password process</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000088;\">$validation</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">schema</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'users\'</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">validator</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #009900;\">[</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'email\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">email</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'password\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">password</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009900;\">]</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Pembuatan Sesi User yang terotentikasi dan di berikan hak otoritas untuk mengakses sumber daya tertentu</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #666666; font-style: italic;\">// check validation and redirection</span><br /><span style=\"color: #b1b100;\">if</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$validation</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">start_session</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'100\'</span><span style=\"color: #339933;\">,</span><span style=\"color: #0000ff;\">\'100\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">redirect</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/auth/dashboard\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span> <span style=\"color: #b1b100;\">else</span><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">echo</span> <span style=\"color: #0000ff;\">\"email or password error!! please insert correct email &amp; password\"</span><span style=\"color: #339933;\">;</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Middleware digunakan untuk validasi sesi user berdasarkan id session</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> before<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> void<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #990000;\">session_start</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">if</span><span style=\"color: #009900;\">(</span><span style=\"color: #339933;\">!</span><span style=\"color: #990000;\">isset</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$_SESSION</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'Gemstone_Auth_Token\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span><span style=\"color: #009900;\">)</span><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">redirect</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/login\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #990000;\">session_regenerate_id</span><span style=\"color: #009900;\">(</span><span style=\"color: #cc66cc;\">1</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">if</span> <span style=\"color: #009900;\">(</span><span style=\"color: #339933;\">!</span><span style=\"color: #990000;\">isset</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$_COOKIE</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'session_expiration\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span> <span style=\"color: #339933;\">||</span> <span style=\"color: #990000;\">time</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span> <span style=\"color: #339933;\">&gt;</span> <span style=\"color: #009900;\">(</span>int<span style=\"color: #009900;\">)</span><span style=\"color: #000088;\">$_COOKIE</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'session_expiration\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">endSession</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span> <span style=\"color: #b1b100;\">else</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$_COOKIE</span><span style=\"color: #009900;\">[</span><span style=\"color: #0000ff;\">\'session_expiration\'</span><span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>', 1),
(41, 'Composer', '<p>Install Via Compooser</p>\r\n<ul>\r\n<li style=\"list-style-type: none;\">\r\n<ul>\r\n<li>Buka composer cli</li>\r\n<li>Jalankan perintah composer cretate $ composer create-project --stability=dev xel/framework firstApp</li>\r\n<li>Tunggu proses download sampai selesai</li>\r\n<li>Masuk ke direktory firstApp</li>\r\n<li>Jalankan perintah php -S localhost:8080 -t public</li>\r\n</ul>\r\n</li>\r\n</ul>', 3),
(42, 'Basedata', '<p>Base data merupakan salah satu bagian pada sistem BSD yang bertidak sebagai antarmuka untuk memanajemen data yang akan dilakukan proses query baik secara instant query manupun manual query.</p>\r\n<p><strong>Overview</strong></p>\r\n<p>Konstruksi BaseData merupakan parent class yang berfungsi sebagai kelas utama yang akan di extend oleh child class untuk dapat menyediakan utilitas pengelolaan data yang berkaitan dengan manipulasi data di DBMS secara minimal .</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\"><!--?php<br /--><span style=\"color: #000000; font-weight: bold;\"><!--?php <br /-->namespace</span> setup\\baseclass<span style=\"color: #339933;\">;</span><span style=\"color: #000000; font-weight: bold;\"><br />use</span> setup\\config\\xgen<span style=\"color: #339933;\">;</span><br /><span style=\"color: #000000; font-weight: bold;\">class</span> BaseData<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* @var mixed|xgen&nbsp;<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">protected</span> mixed <span style=\"color: #000088;\">$query</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* Constructor have a function to load instance of object class<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> __construct<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000000; font-weight: bold;\">new</span> xgen<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br /><span style=\"color: #009900;\">}</span><br /></span></pre>\r\n<p>Konstruksi extended child class dengan BaseData. Child class merupakan sebuah class yang berisi bussines logic query spesifik yang disesuaikan oleh studi kasus yang&nbsp; ingin diselesaikan</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\"><!--?php<br /--><!--?php    <br /--><span style=\"color: #000000; font-weight: bold;\">    namespace</span> devise\\Basedata<span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">use</span> setup\\baseclass\\BaseData<span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">class</span> users <span style=\"color: #000000; font-weight: bold;\">extends</span> BaseData<span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #666666; font-style: italic;\">/*Logical code on here<br />&nbsp;<br />  &nbsp; }<br /></span></span></pre>\r\n<p>Penggunaan Fitur Xgen Query Builder. Query builder dapat dijalankan dengan memanggil instance dari property query kemudian memilih fungsi show() yang akan menampilkan semua data tabel Kemudian data akan dikembalikan sebagai data array assosiatif.</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\"><!--?php</span--><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">namespace</span> devise\\Basedata<span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">use</span> setup\\baseclass\\BaseData<span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">class</span> users <span style=\"color: #000000; font-weight: bold;\">extends</span> BaseData<span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* @return array Define name off table<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Define name off table<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> get_users<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> <span style=\"color: #990000;\">array</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;* Retuning Query $data which selected&nbsp;<br />&nbsp; form table users &nbsp;&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #b1b100;\">return</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">query</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">show</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'users\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}<br /></span><br /></span></pre>\r\n<p>&nbsp;</p>\r\n<p><strong>Integrasi dengan Service Segmen</strong></p>\r\n<p>Define Instance of Basedata child class instance as property. Yang pertama dilakukana adalah melakukan :</p>\r\n<ul>\r\n<li>Import namespace dari Basedata Users</li>\r\n<li>Melakukan definisi instance yang dijadikan nilai dari attribute pada constructor.&nbsp;</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">namespace</span> devise\\Service<span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #666666; font-style: italic;\">//import users Basedata Child Class</span><br /><span style=\"color: #000000; font-weight: bold;\">use</span> devise\\Basedata\\users<span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #666666; font-style: italic;\">//extended form parentclass</span><br /><span style=\"color: #000000; font-weight: bold;\">use</span> setup\\baseclass\\BaseServise<span style=\"color: #339933;\">;</span><br />&nbsp;<br /><span style=\"color: #000000; font-weight: bold;\">class</span> Service <span style=\"color: #000000; font-weight: bold;\">extends</span> BaseServise <span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">protected</span> users <span style=\"color: #000088;\">$users</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* @param users $users<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> __construct<span style=\"color: #009900;\">(</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; users <span style=\"color: #000088;\">$users</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">)</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//Define the instance as attribute value</span><br />&nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">users</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$users</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}<br /></span></pre>\r\n<p>Call function on Imported class to Get and display data . Untuk menampilakan data,</p>\r\n<ul>\r\n<li>buatlah variable $data yang yang berisi property yang memanggil fungsi get_users dari Basedata Users yang berisi data tabel users.</li>\r\n<li>Tampilkan data dengan fungsi vardump()</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"> &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* @return void<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> index<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span>void <span style=\"color: #009900;\">{</span><br />&nbsp;<br />&nbsp;<span style=\"color: #666666; font-style: italic;\">// bind data on variable</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">users</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">get_users</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<span style=\"color: #666666; font-style: italic;\">//debug data and print data on the user</span><br />&nbsp; <span style=\"color: #000000; font-weight: bold;\">Interface</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">var_dump</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$data</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<p>Buat Router untuk navigasi dan eksekusi fungsi pada folder Router/web.php</p>\r\n<ul>\r\n<li>Tambahkan baris berikut . kemudian akses prefix yang / untuk menampilkan data yang di ambil dari Basedata.</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">   $router</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">get</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/\'</span><span style=\"color: #339933;\">,</span> \\devise\\Service\\Service<span style=\"color: #339933;\">::</span><span style=\"color: #000000; font-weight: bold;\">class</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'index\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>', 14),
(43, 'Service', '<p>Service merupakan proses penghubung antara service dengan display dan devise dengan Basedata secara fisik. Akan tetapi, masih terdapat bagian sub proses sebelum memerantai antara service dengan model yang dipisahkan dengan auto query dan sanitasi data dan adanya proses autorisasi dan enkripsi data pada Gemstone Process sebelum diteruskan pada service.</p>\r\n<p><strong>Handling Incoming Request</strong></p>\r\n<p>Getting data from Request Handler</p>\r\n<ul>\r\n<li>Inject The instance of class Request Handler on Constructor as a Property Value</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\"><span style=\"color: #000000; font-weight: bold;\">use</span> setup\\baseclass\\BaseServise<span style=\"color: #339933;\">;</span><br /><span style=\"color: #000000; font-weight: bold;\">use</span> setup\\config\\RequestHandler<span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<br /><span style=\"color: #000000; font-weight: bold;\">class</span> TestClass <span style=\"color: #000000; font-weight: bold;\">extends</span> BaseServise <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">private</span> RequestHandler <span style=\"color: #000088;\">$handler</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* @param RequestHandler $handler<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> __construct<span style=\"color: #009900;\">(</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; RequestHandler <span style=\"color: #000088;\">$handler</span><span style=\"color: #339933;\">,</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">)</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; <span style=\"color: #666666; font-style: italic;\">// define Injected instance as </span><br />&nbsp; &nbsp; &nbsp;Property value<br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$auth</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;</span></pre>\r\n<ul>\r\n<li>Call Hanlder function request from class Hanlder Request</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #666666; font-style: italic;\">// Sample Method Declarations </span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> HandleRequest<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//get data from request </span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">handler</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">request</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span></pre>\r\n<ul>\r\n<li>Accessing Object data of request</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #666666; font-style: italic;\">// Sample Method Declarations </span><br /><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> HandleRequest<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//get data from request </span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">handler</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">request</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp;<span style=\"color: #666666; font-style: italic;\">// Calling Data Object </span><br />&nbsp; &nbsp;<span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">nama</span><span style=\"color: #339933;\">;</span>  it will poin object&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #990000;\">key</span> called nama<br />&nbsp;<br />&nbsp; &nbsp;<span style=\"color: #666666; font-style: italic;\">// Calling Data Object using loop </span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">Foreach</span> <span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$data</span> <span style=\"color: #b1b100;\">as</span> <span style=\"color: #000088;\">$item</span> <span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"color: #b1b100;\">Echo</span> <span style=\"color: #000088;\">$item</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;<br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Handling Self Validation data (Oncoming Feature on 0.9 Alpha Version)</li>\r\n</ul>\r\n<p>&nbsp;</p>\r\n<p><strong>Perform Single Authentication and Authorization Just in View code</strong></p>\r\n<p>Perform Single Authentication and Authorization Just in View code</p>\r\n<ul>\r\n<li>Inject Gem_Auth class to constructor and make it instance value of property</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">class</span> &nbsp;Authentication <span style=\"color: #000000; font-weight: bold;\">extends</span> BaseServise <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">private</span> Gems_Auth <span style=\"color: #000088;\">$auth</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">private</span> RequestHandler <span style=\"color: #000088;\">$handler</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009933; font-style: italic;\">/**<br />&nbsp; &nbsp; &nbsp;* @param Gems_Auth $auth<br />&nbsp; &nbsp; &nbsp;* @param RequestHandler $handler<br />&nbsp; &nbsp; &nbsp;*/</span><br />&nbsp; &nbsp; <span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> __construct<span style=\"color: #009900;\">(</span><br />&nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; RequestHandler <span style=\"color: #000088;\">$handler</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; Gems_Auth <span style=\"color: #000088;\">$auth</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #009900;\">)</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$auth</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">handler</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$handler</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Using Gems_Auth to validate email , password or other data with in the compared ada has on the sampe table. It will return bolean value which can used to make a flag autectication.</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> do_login<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span> void<br /><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">//getting data</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">handler</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">request</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #666666; font-style: italic;\">// handling validator email password process</span><br />&nbsp;<br />&nbsp; &nbsp; <span style=\"color: #000088;\">$validation</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">schema</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'users\'</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">validator</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #009900;\">[</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'email\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">email</span><span style=\"color: #339933;\">,</span><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #0000ff;\">\'password\'</span> <span style=\"color: #339933;\">=&gt;</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">password</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #009900;\">]</span><br />&nbsp; &nbsp; <span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp;<br />&nbsp;<br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<p>Authorization logic</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #666666; font-style: italic;\">// check validation and redirection</span><br /><span style=\"color: #b1b100;\">if</span><span style=\"color: #009900;\">(</span><span style=\"color: #000088;\">$validation</span><span style=\"color: #009900;\">)</span> <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">start_session</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'100\'</span><span style=\"color: #339933;\">,</span><span style=\"color: #0000ff;\">\'100\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">auth</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">redirect</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/auth/dashboard\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span> <span style=\"color: #b1b100;\">else</span><span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #b1b100;\">echo</span> <span style=\"color: #0000ff;\">\"email or password error!! please insert correct email &amp; password\"</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>', 14),
(44, 'Display', '<p>Merupakan suatu proses yang berfungsi untuk berfokus pada menampilkan hasil output dan memproses client side request, serta&nbsp; berinteraksi pada sub progam yang yang memiliki hubungan dengan service seperti Gemstone Process.</p>\r\n<ul>\r\n<li>Using Render Function : digunakan untuk melakukan render halaman web yang akan di tampilkan ke pengguna\r\n<ol style=\"list-style-type: lower-alpha;\">\r\n<li>Only Redirect</li>\r\n</ol>\r\n</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> test<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span>void <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">render</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'redirect\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; b. With Data</p>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000088;\">$data</span> <span style=\"color: #339933;\">=</span> <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">connect</span><span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">showByCondition</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'documentation\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'title\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'Service\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br />&nbsp; &nbsp; &nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">render</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'sidebar-pages/bsd/basedata\'</span><span style=\"color: #339933;\">,</span> <span style=\"color: #000088;\">$data</span><span style=\"color: #339933;\">,</span> <span style=\"color: #0000ff;\">\'data\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span></pre>\r\n<ul>\r\n<li>Using Redirect Function</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> test<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span>void <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">redirect</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/redirect\'</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>\r\n<ul>\r\n<li>Using RedirectWithData Flash data</li>\r\n</ul>\r\n<pre class=\"php bg-light border border-primary rounded\" style=\"font-family: monospace;\"><span style=\"color: #000000; font-weight: bold;\">public</span> <span style=\"color: #000000; font-weight: bold;\">function</span> test<span style=\"color: #009900;\">(</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">:</span>void <span style=\"color: #009900;\">{</span><br />&nbsp; &nbsp; <span style=\"color: #000088;\">$this</span><span style=\"color: #339933;\">-&gt;</span><span style=\"color: #004000;\">RedirectWithData</span><span style=\"color: #009900;\">(</span><span style=\"color: #0000ff;\">\'/redirect\'</span><span style=\"color: #339933;\">,</span> &lsquo;successfully&rsquo;<span style=\"color: #339933;\">,</span> <span style=\"color: #009900;\">[</span>&ldquo;nama&rdquo; <span style=\"color: #339933;\">=&gt;</span> &ldquo;yogi&rdquo;<span style=\"color: #009900;\">]</span><span style=\"color: #339933;\">,</span> <span style=\"color: #cc66cc;\">302</span><span style=\"color: #009900;\">)</span><span style=\"color: #339933;\">;</span><br /><span style=\"color: #009900;\">}</span><br />&nbsp;</pre>', 14);

-- --------------------------------------------------------

--
-- Struktur dari tabel `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `username` varchar(255) NOT NULL,
  `email` varchar(255) NOT NULL,
  `password` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `users`
--

INSERT INTO `users` (`id`, `username`, `email`, `password`) VALUES
(47, 'anggacp', 'test@gmail.com', '$2y$10$TInRgd.OEzkevnxw9ww0OO2ULlbEUKS57MygMKBMsgXtT5wIEBPie'),
(51, 'anggacp3', 'test3@gmail.com', '$2y$10$.ovbiVaM7M.XK557QNshcemEw2lovHDrs6wQNi3255VwgS.lT152C');

--
-- Indexes for dumped tables
--

--
-- Indeks untuk tabel `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`category_id`);

--
-- Indeks untuk tabel `documentation`
--
ALTER TABLE `documentation`
  ADD PRIMARY KEY (`id`),
  ADD KEY `category_id` (`category_id`);

--
-- Indeks untuk tabel `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT untuk tabel yang dibuang
--

--
-- AUTO_INCREMENT untuk tabel `categories`
--
ALTER TABLE `categories`
  MODIFY `category_id` int(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;

--
-- AUTO_INCREMENT untuk tabel `documentation`
--
ALTER TABLE `documentation`
  MODIFY `id` int(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=45;

--
-- AUTO_INCREMENT untuk tabel `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=52;

--
-- Ketidakleluasaan untuk tabel pelimpahan (Dumped Tables)
--

--
-- Ketidakleluasaan untuk tabel `documentation`
--
ALTER TABLE `documentation`
  ADD CONSTRAINT `documentation_ibfk_1` FOREIGN KEY (`category_id`) REFERENCES `categories` (`category_id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
